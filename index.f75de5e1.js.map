{"mappings":"AAAA;AAEA,MAAM,QAAQ,SAAS,aAAa,CAAC;AAErC,MAAM,OAAO,MAAM,IAAI,CAAC,MAAM,IAAI;AAElC,KAAK,OAAO,CAAC,CAAA;IACX,IAAI,IAAI,KAAK,CAAC,MAAM,GAAG,GAAG;QACxB,MAAM,aAAa,IAAI,KAAK,CAAC,EAAE;QAC/B,IAAI,YAAY;YACd,MAAM,aAAa,WAAW,SAAS,CAAC;YACxC,IAAI,IAAI,KAAK,CAAC,MAAM,GAAG,GAAG;gBACxB,MAAM,WAAW,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,MAAM,GAAG,EAAE;gBAChD,IAAI,UACF,IAAI,YAAY,CAAC,YAAY;qBAE7B,IAAI,WAAW,CAAC;YAEpB,OACE,IAAI,WAAW,CAAC;QAEpB;IACF;AACF","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\nconst table = document.querySelector('table');\n\nconst rows = Array.from(table.rows);\n\nrows.forEach(row => {\n  if (row.cells.length > 1) {\n    const secondCell = row.cells[1];\n    if (secondCell) {\n      const clonedCell = secondCell.cloneNode(true);\n      if (row.cells.length > 2) {\n        const lastCell = row.cells[row.cells.length - 1];\n        if (lastCell) {\n          row.insertBefore(clonedCell, lastCell);\n        } else {\n          row.appendChild(clonedCell);\n        }\n      } else {\n        row.appendChild(clonedCell);\n      }\n    }\n  }\n});\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}